# -*- coding: utf-8 -*-
"""Water demand forecasting week1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TCrKmibN5rt4mabmwmJQ-9eE4D8a8ODO
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import joblib

df = pd.read_csv("/content/drive/MyDrive/water_consumption_forecasting.csv")


print("Available columns:", df.columns.tolist())


target_candidates = [c for c in df.columns if 'consumption' in c.lower()]
if len(target_candidates) == 0:
    raise ValueError("No column with 'consumption' found. Available: " + str(df.columns))
target_col = target_candidates[0]
print("Target column selected:", target_col)


X = df.drop(columns=[target_col])
y = df[target_col]

if "date" in X.columns:
    X["date"] = pd.to_datetime(X["date"])
    X["year"] = X["date"].dt.year
    X["month"] = X["date"].dt.month
    X["day"] = X["date"].dt.day
    X = X.drop(columns=["date"])


if "region" in X.columns:
    X["region"] = X["region"].astype("category").cat.codes


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = LinearRegression()
model.fit(X_train, y_train)


y_pred = model.predict(X_test)


print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("R² Score:", r2_score(y_test, y_pred))

plt.figure(figsize=(10,5))
plt.plot(range(len(y_test)), y_test.values, label="Actual Consumption")
plt.plot(range(len(y_test)), y_pred, label="Predicted Consumption", linestyle="--")
plt.xlabel("Samples")
plt.ylabel("Water Consumption")
plt.legend()
plt.title("Water Consumption Forecasting")
plt.show()

joblib.dump(model, "water_consumption_model.pkl")
print("✅ Model saved as water_consumption_model.pkl")

